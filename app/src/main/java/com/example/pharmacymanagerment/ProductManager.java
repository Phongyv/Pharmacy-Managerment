package com.example.pharmacymanagerment;

import android.net.Uri;
import com.google.firebase.firestore.*;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;

import java.util.HashMap;
import java.util.Map;

public class ProductManager {
    private FirebaseFirestore db;
    private FirebaseStorage storage;

    public ProductManager() {
        db = FirebaseFirestore.getInstance();
        storage = FirebaseStorage.getInstance();
    }

    // üü¢ Th√™m s·∫£n ph·∫©m v√†o Firestore
    public void addProduct(String name, double price, String des, String img) {
        Map<String, Object> product = new HashMap<>();
        product.put("name", name);
        product.put("price", price);
        product.put("des", des);
        product.put("img", img);

        db.collection("products")
                .add(product)
                .addOnSuccessListener(documentReference -> {
                    System.out.println("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m: " + documentReference.getId());
                })
                .addOnFailureListener(e -> {
                    System.err.println("L·ªói khi th√™m s·∫£n ph·∫©m: " + e.getMessage());
                });
    }

    // üü° C·∫≠p nh·∫≠t s·∫£n ph·∫©m v√† c·∫≠p nh·∫≠t ·∫£nh trong Storage
    public void updateProduct(String productId, String name, double price, String des, Uri newImageUri) {
        DocumentReference productRef = db.collection("products").document(productId);

        // L·∫•y ·∫£nh c≈© tr∆∞·ªõc khi c·∫≠p nh·∫≠t
        productRef.get().addOnSuccessListener(documentSnapshot -> {
            if (documentSnapshot.exists()) {
                String oldImageUrl = documentSnapshot.getString("img");

                if (newImageUri != null) {
                    // N·∫øu c√≥ ·∫£nh m·ªõi, x√≥a ·∫£nh c≈© tr∆∞·ªõc khi t·∫£i ·∫£nh m·ªõi
                    if (oldImageUrl != null && !oldImageUrl.isEmpty()) {
                        StorageReference oldImageRef = storage.getReferenceFromUrl(oldImageUrl);
                        oldImageRef.delete().addOnSuccessListener(aVoid -> {
                            System.out.println("·∫¢nh c≈© ƒë√£ ƒë∆∞·ª£c x√≥a.");
                        }).addOnFailureListener(e -> {
                            System.err.println("L·ªói khi x√≥a ·∫£nh c≈©: " + e.getMessage());
                        });
                    }

                    // T·∫£i ·∫£nh m·ªõi l√™n Storage
                    StorageReference newImageRef = storage.getReference().child("product_images/" + productId + ".jpg");
                    newImageRef.putFile(newImageUri)
                            .addOnSuccessListener(taskSnapshot -> newImageRef.getDownloadUrl().addOnSuccessListener(newImageUrl -> {
                                // C·∫≠p nh·∫≠t th√¥ng tin s·∫£n ph·∫©m v·ªõi ·∫£nh m·ªõi
                                updateProductInfo(productId, name, price, des, newImageUrl.toString());
                            }))
                            .addOnFailureListener(e -> System.err.println("L·ªói khi t·∫£i ·∫£nh m·ªõi: " + e.getMessage()));
                } else {
                    // N·∫øu kh√¥ng c√≥ ·∫£nh m·ªõi, ch·ªâ c·∫≠p nh·∫≠t th√¥ng tin s·∫£n ph·∫©m
                    updateProductInfo(productId, name, price, des, oldImageUrl);
                }
            }
        }).addOnFailureListener(e -> {
            System.err.println("L·ªói khi l·∫•y th√¥ng tin s·∫£n ph·∫©m: " + e.getMessage());
        });
    }

    // H√†m c·∫≠p nh·∫≠t th√¥ng tin s·∫£n ph·∫©m trong Firestore
    private void updateProductInfo(String productId, String name, double price, String des, String img) {
        DocumentReference productRef = db.collection("products").document(productId);

        Map<String, Object> updates = new HashMap<>();
        updates.put("name", name);
        updates.put("price", price);
        updates.put("des", des);
        updates.put("img", img);

        productRef.update(updates)
                .addOnSuccessListener(aVoid -> {
                    System.out.println("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.");
                })
                .addOnFailureListener(e -> {
                    System.err.println("L·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m: " + e.getMessage());
                });
    }

    // üî¥ X√≥a s·∫£n ph·∫©m v√† ·∫£nh kh·ªèi Firestore v√† Storage
    public void deleteProduct(String productId) {
        DocumentReference productRef = db.collection("products").document(productId);

        // L·∫•y th√¥ng tin s·∫£n ph·∫©m ƒë·ªÉ x√≥a ·∫£nh tr∆∞·ªõc
        productRef.get().addOnSuccessListener(documentSnapshot -> {
            if (documentSnapshot.exists()) {
                String imageUrl = documentSnapshot.getString("img");

                if (imageUrl != null && !imageUrl.isEmpty()) {
                    StorageReference photoRef = storage.getReferenceFromUrl(imageUrl);

                    // X√≥a ·∫£nh trong Firebase Storage
                    photoRef.delete().addOnSuccessListener(aVoid -> {
                        System.out.println("·∫¢nh ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng.");

                        // Sau khi x√≥a ·∫£nh, ti·∫øp t·ª•c x√≥a s·∫£n ph·∫©m trong Firestore
                        productRef.delete().addOnSuccessListener(aVoid1 -> {
                            System.out.println("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a.");
                        }).addOnFailureListener(e -> {
                            System.err.println("L·ªói khi x√≥a s·∫£n ph·∫©m: " + e.getMessage());
                        });

                    }).addOnFailureListener(e -> {
                        System.err.println("L·ªói khi x√≥a ·∫£nh: " + e.getMessage());
                    });

                } else {
                    // N·∫øu kh√¥ng c√≥ ·∫£nh, ch·ªâ x√≥a s·∫£n ph·∫©m
                    productRef.delete().addOnSuccessListener(aVoid -> {
                        System.out.println("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a.");
                    }).addOnFailureListener(e -> {
                        System.err.println("L·ªói khi x√≥a s·∫£n ph·∫©m: " + e.getMessage());
                    });
                }
            }
        }).addOnFailureListener(e -> {
            System.err.println("L·ªói khi l·∫•y th√¥ng tin s·∫£n ph·∫©m: " + e.getMessage());
        });
    }
}


//ProductManager productManager = new ProductManager();
//
//// Th√™m s·∫£n ph·∫©m m·ªõi
//productManager.addProduct("Paracetamol", 50000, "Thu·ªëc gi·∫£m ƒëau, h·∫° s·ªët", "https://firebasestorage.googleapis.com/example.jpg");
//
//// C·∫≠p nh·∫≠t s·∫£n ph·∫©m v·ªõi ·∫£nh m·ªõi
//Uri newImageUri = Uri.parse("file:///storage/emulated/0/DCIM/new_image.jpg"); // ƒê√¢y l√† ·∫£nh m·ªõi ƒë∆∞·ª£c ch·ªçn
//productManager.updateProduct("id_san_pham", "Paracetamol Extra", 60000, "Thu·ªëc gi·∫£m ƒëau m·∫°nh h∆°n", newImageUri);
//
//// X√≥a s·∫£n ph·∫©m (S·∫Ω x√≥a c·∫£ ·∫£nh)
//productManager.deleteProduct("id_san_pham");

